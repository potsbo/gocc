#!/bin/bash
try() {
  expected="$1"
  input="$2"

  ./bin/gocc "$input" > tmp.s
  if [ "$?" != "0" ]; then
    echo "gocc failed"
    exit 1
  fi

	gcc -c tmp.s -o tmp.o
	gcc -o tmp foo.o tmp.o

  ./tmp
  actual="$?"

  if [ "$actual" = "$expected" ]; then
    echo "$input => $actual"
  else
    echo "$input => $expected expected, but got $actual"
    exit 1
  fi
}

gcc -c foo.c -o foo.o

try 1 'int main() {int *p; alloc(&p, 1, 2, 4, 8); int *q; q = p + 0; return *q;}'
try 2 'int main() {int *p; alloc(&p, 1, 2, 4, 8); int *q; q = p + 1; return *q;}'
try 4 'int main() {int *p; alloc(&p, 1, 2, 4, 8); int *q; q = p + 2; return *q;}'
try 8 'int main() {int *p; alloc(&p, 1, 2, 4, 8); int *q; q = p + 3; return *q;}'
try 3 'int main() { int x; int *y; int **z; y = &x; x = 3; z = &y; return **z; }'
try 3 'int main() { int x; int *y; y = &x;  x = 3; return *y; }'
try 3 'int main() { int x; return 3; }'
try 3 'int main() { int x; int y; x = 3; y = &x; return *y; }'
try 0 "int main() {return 0;}"
try 42 "int main(){return 42;}"
try 21 "int main(){return 5+20-4;}"
try 41 "int main(){return  12 + 34 - 5 ;}"
try 42 "int main(){return  6 * 7;}"
try 6 "int main(){return 42/7;}"
try 6 "int main(){return 42/(3 + 4);}"
try 47 'int main(){return 5+6*7;}'
try 15 'int main(){return 5*(9-6);}'
try 4 'int main(){return (3+5)/2;}'
try 1 'int main(){return +1;}'
try 1 'int main(){return (1 * +1);}'
try 1 'int main(){return (3 * -1) / +3 + 2 *(-1) * (-1);}'
try 1 'int main(){return -1 * 3 + 4;}'
try 0 'int main(){return 0==1;}'
try 1 'int main(){return 42==42;}'
try 1 'int main(){return 31>15;}'
try 0 'int main(){return 31<15;}'
try 1 'int main(){return 0!=1;}'
try 0 'int main(){return 42!=42;}'
try 1 'int main(){return 42<=42;}'
try 1 'int main(){return (42>=42) *(42<=42);}'
try 1 'int main(){return (42>=(1 < 3) * 3) *(42<=42);}'
try 1 'int main(){int a; return a = 1; a;}'
try 49 'int main(){int a; int b; a = 3 * 4; b = 5 * 6 + 7; return a + b;}'
try 8 'int main(){int a; int b; int c; int d; int e; int f; int g; int h; int i; int j; int k; int l; int m; int n; int o; int p; int q; int r; int s; int t; int u; int v; int w; int x; int y; int z; int ab; a=1;b=1;c=1;d=1;e=1;f=1;g=1;h=1;i=1;j=1;k=1;l=1;m=1;n=1;o=1;p=1;q=1;r=1;s=1;t=1;u=1;v=1;w=1;x=1;y=1;z=1;ab=2 * 3 + 2;return ab;}'
try 8 'int main(){return 8;}'
try 2 'int main(){int a; a = 1; if (1) a = 2; return a;}'
try 1 'int main(){int a; a = 1; if (0) a = 2; return a;}'
try 3 'int main(){int a; a = 1; if (0) a = 2; else a = 3; return a;}'
try 128 'int main(){int a; a = 2; while (a < 100) a = a * 2; return a;}'
try 55 'int main(){int a; a = 0; int i; for (i = 0; i <= 10; i = i+1) a = a + i ; return a;}'
try 44 'int main(){int a; a = 0; int i; for (i = 0; i <= 10; i = i+1) { a = a + i; a = a - 1; } return a;}'
try 0 'int main(){return foo();}'
try 123 'int main(){return bar(123);}'
try 46 'int main(){return add(12, 34);}'
try 1 'int asis(int a) { return a; } int main(){return asis(1);}'
try 3 'int add(int a, int b) { return a + b; } int main(){return add(1, 2);}'
try 233 'int fib(int n) { if (n < 2) { return 1; } return fib(n - 1) + fib(n - 2); } int main(){ return fib(12); }'

echo OK
