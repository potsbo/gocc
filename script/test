#!/bin/bash
try() {
  expected="$1"
  input="$2"

  ./bin/gocc "$input" > tmp.s
  if [ "$?" != "0" ]; then
    echo "gocc failed"
    exit 1
  fi

	gcc -c tmp.s -o tmp.o
	gcc -o tmp foo.o tmp.o

  ./tmp
  actual="$?"

  if [ "$actual" = "$expected" ]; then
    echo "$input => $actual"
  else
    echo "$input => $expected expected, but got $actual"
    exit 1
  fi
}

gcc -c foo.c -o foo.o

try 0 "main() {return 0;}"
try 42 "main(){return 42;}"
try 21 "main(){return 5+20-4;}"
try 41 "main(){return  12 + 34 - 5 ;}"
try 42 "main(){return  6 * 7;}"
try 6 "main(){return 42/7;}"
try 6 "main(){return 42/(3 + 4);}"
try 47 'main(){return 5+6*7;}'
try 15 'main(){return 5*(9-6);}'
try 4 'main(){return (3+5)/2;}'
try 1 'main(){return +1;}'
try 1 'main(){return (1 * +1);}'
try 1 'main(){return (3 * -1) / +3 + 2 *(-1) * (-1);}'
try 1 'main(){return -1 * 3 + 4;}'
try 0 'main(){return 0==1;}'
try 1 'main(){return 42==42;}'
try 1 'main(){return 31>15;}'
try 0 'main(){return 31<15;}'
try 1 'main(){return 0!=1;}'
try 0 'main(){return 42!=42;}'
try 1 'main(){return 42<=42;}'
try 1 'main(){return (42>=42) *(42<=42);}'
try 1 'main(){return (42>=(1 < 3) * 3) *(42<=42);}'
try 1 'main(){return a = 1; a;}'
try 49 'main(){a = 3 * 4; b = 5 * 6 + 7; return a + b;}'
try 8 'main(){a=1;b=1;c=1;d=1;e=1;f=1;g=1;h=1;i=1;j=1;k=1;l=1;m=1;n=1;o=1;p=1;q=1;r=1;s=1;t=1;u=1;v=1;w=1;x=1;y=1;z=1;ab=2 * 3 + 2;return ab;}'
try 8 'main(){return 8;}'
try 2 'main(){a = 1; if (1) a = 2; return a;}'
try 1 'main(){a = 1; if (0) a = 2; return a;}'
try 3 'main(){a = 1; if (0) a = 2; else a = 3; return a;}'
try 128 'main(){a = 2; while (a < 100) a = a * 2; return a;}'
try 55 'main(){a = 0; for (i = 0; i <= 10; i = i+1) a = a + i ; return a;}'
try 44 'main(){a = 0; for (i = 0; i <= 10; i = i+1) { a = a + i; a = a - 1; } return a;}'
try 0 'main(){return foo();}'
try 123 'main(){return bar(123);}'
try 46 'main(){return add(12, 34);}'
try 1 'asis(a) { return a; } main(){return asis(1);}'
try 3 'add(a, b) { return a + b; } main(){return add(1, 2);}'
try 233 'fib(n) { if (n < 2) { return 1; } return fib(n - 1) + fib(n - 2); } main(){ return fib(12); }'

echo OK
