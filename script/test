#!/bin/bash
try() {
  expected="$1"
  input="$2"

  ./bin/gocc "$input" > tmp.s
  if [ "$?" != "0" ]; then
    echo "gocc failed"
    exit 1
  fi
  gcc -o tmp tmp.s
  ./tmp
  actual="$?"

  if [ "$actual" = "$expected" ]; then
    echo "$input => $actual"
  else
    echo "$input => $expected expected, but got $actual"
    exit 1
  fi
}

try 0 "return 0;"
try 42 "return 42;"
try 21 "return 5+20-4;"
try 41 "return  12 + 34 - 5 ;"
try 42 "return  6 * 7;"
try 6 "return 42/7;"
try 6 "return 42/(3 + 4);"
try 47 'return 5+6*7;'
try 15 'return 5*(9-6);'
try 4 'return (3+5)/2;'
try 1 'return +1;'
try 1 'return (1 * +1);'
try 1 'return (3 * -1) / +3 + 2 *(-1) * (-1);'
try 1 'return -1 * 3 + 4;'
try 0 'return 0==1;'
try 1 'return 42==42;'
try 1 'return 31>15;'
try 0 'return 31<15;'
try 1 'return 0!=1;'
try 0 'return 42!=42;'
try 1 'return 42<=42;'
try 1 'return (42>=42) *(42<=42);'
try 1 'return (42>=(1 < 3) * 3) *(42<=42);'
try 1 'return a = 1; a;'
try 49 'a = 3 * 4; b = 5 * 6 + 7; return a + b;'
try 8 'a=1;b=1;c=1;d=1;e=1;f=1;g=1;h=1;i=1;j=1;k=1;l=1;m=1;n=1;o=1;p=1;q=1;r=1;s=1;t=1;u=1;v=1;w=1;x=1;y=1;z=1;ab=2 * 3 + 2;return ab;'
try 8 'return 8;'
try 2 'a = 1; if (1) a = 2; return a;'
try 1 'a = 1; if (0) a = 2; return a;'
try 3 'a = 1; if (0) a = 2; else a = 3; return a;'
try 128 'a = 2; while (a < 100) a = a * 2; return a;'
try 55 'a = 0; for (i = 0; i <= 10; i = i + 1) a = a + i ; return a;'

echo OK
